{"remainingRequest":"E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\node_modules\\babel-loader\\lib\\index.js!E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\src\\mock\\mock.js","dependencies":[{"path":"E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\src\\mock\\mock.js","mtime":1594537077284},{"path":"E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwovLyDpgJrov4dheGlvcy1tb2NrLWFkYXB0ZXLnlJ/miJDku6PnkIZhcGnlnLDlnYAKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IE1vY2tBZGFwdGVyIGZyb20gJ2F4aW9zLW1vY2stYWRhcHRlcic7IC8vIGltcG9ydCB7IExvZ2luVXNlcnMgfSBmcm9tICcuL2RhdGEvdXNlcicKCmltcG9ydCB7IHVzZXJzIH0gZnJvbSAnLi9kYXRhL3VzZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgIHZhciBtb2NrID0gbmV3IE1vY2tBZGFwdGVyKGF4aW9zKTsgLy8gbW9jayBzdWNjZXNzIHJlcXVlc3QgIOaooeaLn+aIkOWKn+ivt+axggoKICAgIG1vY2sub25HZXQoJy9zdWNjZXNzJykucmVwbHkoMjAwLCB7CiAgICAgIG1zZzogJ3N1Y2Nlc3MnCiAgICB9KTsgLy8gbW9jayBlcnJvciByZXF1ZXN0ICDmqKHmi5/lpLHotKXor7fmsYIKCiAgICBtb2NrLm9uR2V0KCcvZXJyb3InKS5yZXBseSg1MDAsIHsKICAgICAgbXNnOiAnZmFpbHVyZScKICAgIH0pOyAvLyBsb2dpbiDmqKHmi5/nmbvlvZXmjqXlj6MKCiAgICBtb2NrLm9uUG9zdCgnL3VzZXIvbG9naW4nKS5yZXBseShmdW5jdGlvbiAoY29uZmlnKSB7CiAgICAgIC8vIOino+aekGF4aW9z5Lyg6L+H5p2l55qE5pWw5o2uCiAgICAgIHZhciBfSlNPTiRwYXJzZSA9IEpTT04ucGFyc2UoY29uZmlnLmRhdGEpLAogICAgICAgICAgdXNlcm5hbWUgPSBfSlNPTiRwYXJzZS51c2VybmFtZSwKICAgICAgICAgIHBhc3N3b3JkID0gX0pTT04kcGFyc2UucGFzc3dvcmQ7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycwoKCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgLy8g5YWI5Yib5bu65LiA5Liq55So5oi35Li656m65a+56LGhCiAgICAgICAgdmFyIHVzZXIgPSBudWxsOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgLy8g5Yik5pat5qih5ouf55qE5YGH5pWw5o2u5Lit5piv5ZCm5pyJ5ZKM5Lyg6L+H5p2l55qE5pWw5o2u5Yy56YWN55qECiAgICAgICAgICB2YXIgaGFzVXNlciA9IHVzZXJzLnNvbWUoZnVuY3Rpb24gKHBlcnNvbikgewogICAgICAgICAgICAvLyDlpoLmnpzlrZjlnKjov5nmoLfnmoTmlbDmja4KICAgICAgICAgICAgaWYgKHBlcnNvbi51c2VybmFtZSA9PT0gdXNlcm5hbWUgJiYgcGVyc29uLnBhc3N3b3JkID09PSBwYXNzd29yZCkgewogICAgICAgICAgICAgIHVzZXIgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHBlcnNvbikpOwogICAgICAgICAgICAgIHVzZXIucGFzc3dvcmQgPSB1bmRlZmluZWQ7CiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8gIOWmguaenOayoeaciei/meS4qnBlcnNvbgogICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7IC8vIOWmguaenOaciemCo+S5iOS4gOS4quS6ugoKICAgICAgICAgIGlmIChoYXNVc2VyKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCLmnIkiKTsKICAgICAgICAgICAgcmVzb2x2ZShbMjAwLCB7CiAgICAgICAgICAgICAgY29kZTogMjAwLAogICAgICAgICAgICAgIG1zZzogJ+eZu+W9leaIkOWKnycsCiAgICAgICAgICAgICAgdXNlcjogdXNlcgogICAgICAgICAgICB9XSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyDlpoLmnpzmsqHmnInov5nkuYjkuIDkuKrkuroKICAgICAgICAgICAgY29uc29sZS5sb2coIuaXoCIpOwogICAgICAgICAgICByZXNvbHZlKFsyMDAsIHsKICAgICAgICAgICAgICBjb2RlOiA1MDAsCiAgICAgICAgICAgICAgbXNnOiAn6LSm5Y+36ZSZ6K+vJwogICAgICAgICAgICB9XSk7CiAgICAgICAgICB9CiAgICAgICAgfSwgNTAwKTsKICAgICAgfSk7CiAgICB9KTsgLy8gIOaooeaLn+azqOWGjOaOpeWPowogIH0KfTs="},{"version":3,"sources":["E:/WorkPlace/GitHub/ICBC-2020-summer/orient-Vue/loginjump/src/mock/mock.js"],"names":["axios","MockAdapter","users","init","mock","onGet","reply","msg","onPost","config","JSON","parse","data","username","password","Promise","resolve","reject","user","setTimeout","hasUser","some","person","stringify","undefined","console","log","code"],"mappings":";;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB,C,CAEA;;AACA,SAAQC,KAAR,QAAoB,aAApB;AAEA,eAAe;AACXC,EAAAA,IADW,kBACJ;AACH,QAAIC,IAAI,GAAG,IAAIH,WAAJ,CAAgBD,KAAhB,CAAX,CADG,CAGH;;AACAI,IAAAA,IAAI,CAACC,KAAL,CAAW,UAAX,EAAuBC,KAAvB,CAA6B,GAA7B,EAAkC;AAC9BC,MAAAA,GAAG,EAAE;AADyB,KAAlC,EAJG,CAOH;;AACAH,IAAAA,IAAI,CAACC,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B,GAA3B,EAAgC;AAC5BC,MAAAA,GAAG,EAAE;AADuB,KAAhC,EARG,CAYH;;AACAH,IAAAA,IAAI,CAACI,MAAL,CAAY,aAAZ,EAA2BF,KAA3B,CAAiC,UAAAG,MAAM,EAAI;AACvC;AADuC,wBAEVC,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACG,IAAlB,CAFU;AAAA,UAEjCC,QAFiC,eAEjCA,QAFiC;AAAA,UAEvBC,QAFuB,eAEvBA,QAFuB,EAGvC;;;AACA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA,YAAIC,IAAI,GAAG,IAAX;AACAC,QAAAA,UAAU,CAAC,YAAM;AACb;AACA,cAAIC,OAAO,GAAGlB,KAAK,CAACmB,IAAN,CAAW,UAAAC,MAAM,EAAI;AAC/B;AACA,gBAAIA,MAAM,CAACT,QAAP,KAAoBA,QAApB,IAAgCS,MAAM,CAACR,QAAP,KAAoBA,QAAxD,EAAkE;AAC9DI,cAAAA,IAAI,GAAGR,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACa,SAAL,CAAeD,MAAf,CAAX,CAAP;AACAJ,cAAAA,IAAI,CAACJ,QAAL,GAAgBU,SAAhB;AACA,qBAAO,IAAP;AACH,aAJD,MAIM;AACF;AACA,qBAAO,KAAP;AACH;AACJ,WAVa,CAAd,CAFa,CAab;;AACA,cAAIJ,OAAJ,EAAa;AACTK,YAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAV,YAAAA,OAAO,CAAC,CAAC,GAAD,EAAM;AAACW,cAAAA,IAAI,EAAE,GAAP;AAAYpB,cAAAA,GAAG,EAAE,MAAjB;AAAwBW,cAAAA,IAAI,EAAJA;AAAxB,aAAN,CAAD,CAAP;AACH,WAHD,MAGO;AAAG;AACNO,YAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAV,YAAAA,OAAO,CAAC,CAAC,GAAD,EAAM;AAACW,cAAAA,IAAI,EAAE,GAAP;AAAYpB,cAAAA,GAAG,EAAE;AAAjB,aAAN,CAAD,CAAP;AACH;AACJ,SArBS,EAqBP,GArBO,CAAV;AAsBH,OAzBM,CAAP;AA0BH,KA9BD,EAbG,CA4CH;AACH;AA9CU,CAAf","sourcesContent":["\r\n// 通过axios-mock-adapter生成代理api地址\r\nimport axios from 'axios'\r\nimport MockAdapter from 'axios-mock-adapter'\r\n\r\n// import { LoginUsers } from './data/user'\r\nimport {users} from './data/user'\r\n\r\nexport default {\r\n    init() {\r\n        let mock = new MockAdapter(axios);\r\n\r\n        // mock success request  模拟成功请求\r\n        mock.onGet('/success').reply(200, {\r\n            msg: 'success'\r\n        });\r\n        // mock error request  模拟失败请求\r\n        mock.onGet('/error').reply(500, {\r\n            msg: 'failure'\r\n        });\r\n\r\n        // login 模拟登录接口\r\n        mock.onPost('/user/login').reply(config => {\r\n            // 解析axios传过来的数据\r\n            let { username, password } = JSON.parse(config.data);\r\n            // eslint-disable-next-line no-unused-vars\r\n            return new Promise((resolve, reject) => {\r\n                // 先创建一个用户为空对象\r\n                let user = null;\r\n                setTimeout(() => {\r\n                    // 判断模拟的假数据中是否有和传过来的数据匹配的\r\n                    let hasUser = users.some(person => {\r\n                        // 如果存在这样的数据\r\n                        if (person.username === username && person.password === password) {\r\n                            user = JSON.parse(JSON.stringify(person));\r\n                            user.password = undefined;\r\n                            return true;\r\n                        }else {\r\n                            //  如果没有这个person\r\n                            return false\r\n                        }\r\n                    });\r\n                    // 如果有那么一个人\r\n                    if (hasUser) {\r\n                        console.log(\"有\");\r\n                        resolve([200, {code: 200, msg: '登录成功',user}]);\r\n                    } else {  // 如果没有这么一个人\r\n                        console.log(\"无\");\r\n                        resolve([200, {code: 500, msg: '账号错误' }])\r\n                    }\r\n                }, 500);\r\n            })\r\n        });\r\n        //  模拟注册接口\r\n    }\r\n}\r\n"]}]}