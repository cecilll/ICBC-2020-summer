{"remainingRequest":"E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\src\\components\\Login.vue","mtime":1594540648460},{"path":"E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WorkPlace\\GitHub\\ICBC-2020-summer\\orient-Vue\\loginjump\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovLyBpbXBvcnQgeyByZXF1ZXN0TG9naW4gfSBmcm9tICcuLi9hcGkvYXBpJzsNCi8vIGltcG9ydCB7TG9naW59IGZyb20gJy4uL3JlcXVlc3RzL2FwaScNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkxvZ2luIiwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgbG9naW5pbmc6IGZhbHNlLA0KICAgICAgbG9naW5Gb3JtOiB7DQogICAgICAgIHVzZXJuYW1lOiAiIiwNCiAgICAgICAgcGFzc3dvcmQ6ICIiDQogICAgICB9LA0KDQogICAgICBhY2NvdW50OiB7DQogICAgICAgIHVzZXJuYW1lOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpei0puWPtyIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgcGFzc3dvcmQ6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5a+G56CBIiwgdHJpZ2dlcjogImJsdXIiIH1dDQogICAgICB9LA0KICAgICAgY2hlY2tlZDogdHJ1ZQ0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBoYW5kbGVMb2dpbjogYXN5bmMgZnVuY3Rpb24oKSB7DQogICAgICBsZXQgdmFsaWQgPSBhd2FpdCB0aGlzLiRyZWZzLmxvZ2luRm9ybS52YWxpZGF0ZSgpOw0KICAgICAgaWYgKHZhbGlkKSB7DQogICAgICAgIHRoaXMubG9naW5pbmcgPSB0cnVlOw0KICAgICAgICBsZXQgbG9naW5QYXJhbXMgPSB7DQogICAgICAgICAgdXNlcm5hbWU6IHRoaXMubG9naW5Gb3JtLnVzZXJuYW1lLA0KICAgICAgICAgIHBhc3N3b3JkOiB0aGlzLmxvZ2luRm9ybS5wYXNzd29yZA0KICAgICAgICB9Ow0KICAgICAgICAvLyDosIPnlKhheGlvc+eZu+W9leaOpeWPow0KICAgICAgICBhd2FpdCB0aGlzLiRhcGkNCiAgICAgICAgICAuTG9naW4obG9naW5QYXJhbXMpDQogICAgICAgICAgLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgIC8vIGRlYnVnZ2VyOw0KICAgICAgICAgICAgbGV0IHsgY29kZSwgbXNnLCB1c2VyIH0gPSByZXMuZGF0YTsNCiAgICAgICAgICAgIGlmIChjb2RlID09PSAyMDApIHsNCiAgICAgICAgICAgICAgLy8gZWxlbWVudHVp5Lit5o+Q56S657uE5Lu2DQogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoew0KICAgICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwNCiAgICAgICAgICAgICAgICBtZXNzYWdlOiBtc2cNCiAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgIC8vIOeZu+mZhuaIkOWKn++8jOeUqOaIt+S/oeaBr+WwseS/neWtmOWcqHNlc3Npb25TdG9yYWdl5LitDQogICAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oInVzZXIiLCBKU09OLnN0cmluZ2lmeSh1c2VyKSk7DQogICAgICAgICAgICAgIC8vIOi3s+i9rOWIsOWQjuWPsOS4u+mhtemdog0KICAgICAgICAgICAgICBjb25zb2xlLmxvZygidGhpcyIsIHRoaXMpOw0KICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IHBhdGg6ICIvaG9tZSIgfSk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLA0KICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG1zZw0KICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9KQ0KICAgICAgICAgIC5jYXRjaChlcnIgPT4gew0KICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTsNCiAgICAgICAgICB9KTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGNvbnNvbGUubG9nKCJlcnJvciBzdWJtaXQhIik7DQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgIH0NCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div id=\"login\">\r\n    <el-form class=\"info\" ref=\"loginForm\" :rules=\"account\" :model=\"loginForm\" label-position=\"right\" label-width=\"auto\" show-message >\r\n      <div class=\"title\">LOGIN</div>\r\n      <div class=\"main\">\r\n        <div class=\"row\">\r\n          <p>Login with your account</p>\r\n        </div>\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            placeholder=\"User Name\"\r\n            prefix-icon=\"el-icon-s-custom\"\r\n            v-model=\"loginForm.username\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            placeholder=\"password\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            v-model=\"loginForm.password\"\r\n            show-password\r\n          ></el-input>\r\n        </el-form-item>\r\n        <div class=\"row\">\r\n          <el-checkbox v-model=\"checked\">Remember Me</el-checkbox>\r\n          <a href=\"#\">Forget password</a>\r\n        </div>\r\n        <el-form-item>\r\n          <el-button @click=\"handleLogin\">Login</el-button>\r\n        </el-form-item>\r\n        <div class=\"row\">\r\n          <p>\r\n            if you do not have an account,\r\n            <a href=\"#\">Sign up</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { requestLogin } from '../api/api';\r\n// import {Login} from '../requests/api'\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      logining: false,\r\n      loginForm: {\r\n        username: \"\",\r\n        password: \"\"\r\n      },\r\n\r\n      account: {\r\n        username: [{ required: true, message: \"请输入账号\", trigger: \"blur\" }],\r\n        password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }]\r\n      },\r\n      checked: true\r\n    };\r\n  },\r\n  methods: {\r\n    handleLogin: async function() {\r\n      let valid = await this.$refs.loginForm.validate();\r\n      if (valid) {\r\n        this.logining = true;\r\n        let loginParams = {\r\n          username: this.loginForm.username,\r\n          password: this.loginForm.password\r\n        };\r\n        // 调用axios登录接口\r\n        await this.$api\r\n          .Login(loginParams)\r\n          .then(res => {\r\n            // debugger;\r\n            let { code, msg, user } = res.data;\r\n            if (code === 200) {\r\n              // elementui中提示组件\r\n              this.$message({\r\n                type: \"success\",\r\n                message: msg\r\n              });\r\n              // 登陆成功，用户信息就保存在sessionStorage中\r\n              sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n              // 跳转到后台主页面\r\n              console.log(\"this\", this);\r\n              this.$router.push({ path: \"/home\" });\r\n            } else {\r\n              this.$message({\r\n                type: \"error\",\r\n                message: msg\r\n              });\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      } else {\r\n        console.log(\"error submit!\");\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import \"../assets/style/Login.css\";\r\n</style>\r\n"]}]}